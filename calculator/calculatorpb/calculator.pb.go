// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calculatorpb/calculator.proto

package calculatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	Num1                 int32    `protobuf:"varint,1,opt,name=num1,proto3" json:"num1,omitempty"`
	Num2                 int32    `protobuf:"varint,2,opt,name=num2,proto3" json:"num2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetNum1() int32 {
	if m != nil {
		return m.Num1
	}
	return 0
}

func (m *SumRequest) GetNum2() int32 {
	if m != nil {
		return m.Num2
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type CalcPrimeRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcPrimeRequest) Reset()         { *m = CalcPrimeRequest{} }
func (m *CalcPrimeRequest) String() string { return proto.CompactTextString(m) }
func (*CalcPrimeRequest) ProtoMessage()    {}
func (*CalcPrimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{2}
}

func (m *CalcPrimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcPrimeRequest.Unmarshal(m, b)
}
func (m *CalcPrimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcPrimeRequest.Marshal(b, m, deterministic)
}
func (m *CalcPrimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcPrimeRequest.Merge(m, src)
}
func (m *CalcPrimeRequest) XXX_Size() int {
	return xxx_messageInfo_CalcPrimeRequest.Size(m)
}
func (m *CalcPrimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcPrimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalcPrimeRequest proto.InternalMessageInfo

func (m *CalcPrimeRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type CalcPrimeResponse struct {
	PrimeFactor          int32    `protobuf:"varint,1,opt,name=prime_factor,json=primeFactor,proto3" json:"prime_factor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcPrimeResponse) Reset()         { *m = CalcPrimeResponse{} }
func (m *CalcPrimeResponse) String() string { return proto.CompactTextString(m) }
func (*CalcPrimeResponse) ProtoMessage()    {}
func (*CalcPrimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{3}
}

func (m *CalcPrimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcPrimeResponse.Unmarshal(m, b)
}
func (m *CalcPrimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcPrimeResponse.Marshal(b, m, deterministic)
}
func (m *CalcPrimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcPrimeResponse.Merge(m, src)
}
func (m *CalcPrimeResponse) XXX_Size() int {
	return xxx_messageInfo_CalcPrimeResponse.Size(m)
}
func (m *CalcPrimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcPrimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalcPrimeResponse proto.InternalMessageInfo

func (m *CalcPrimeResponse) GetPrimeFactor() int32 {
	if m != nil {
		return m.PrimeFactor
	}
	return 0
}

// Clients Sreaming
type CalcAvgRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcAvgRequest) Reset()         { *m = CalcAvgRequest{} }
func (m *CalcAvgRequest) String() string { return proto.CompactTextString(m) }
func (*CalcAvgRequest) ProtoMessage()    {}
func (*CalcAvgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{4}
}

func (m *CalcAvgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcAvgRequest.Unmarshal(m, b)
}
func (m *CalcAvgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcAvgRequest.Marshal(b, m, deterministic)
}
func (m *CalcAvgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcAvgRequest.Merge(m, src)
}
func (m *CalcAvgRequest) XXX_Size() int {
	return xxx_messageInfo_CalcAvgRequest.Size(m)
}
func (m *CalcAvgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcAvgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalcAvgRequest proto.InternalMessageInfo

func (m *CalcAvgRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type CalcAvgResponse struct {
	AveResult            float64  `protobuf:"fixed64,1,opt,name=ave_result,json=aveResult,proto3" json:"ave_result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalcAvgResponse) Reset()         { *m = CalcAvgResponse{} }
func (m *CalcAvgResponse) String() string { return proto.CompactTextString(m) }
func (*CalcAvgResponse) ProtoMessage()    {}
func (*CalcAvgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f42938f8c8365cf, []int{5}
}

func (m *CalcAvgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalcAvgResponse.Unmarshal(m, b)
}
func (m *CalcAvgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalcAvgResponse.Marshal(b, m, deterministic)
}
func (m *CalcAvgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalcAvgResponse.Merge(m, src)
}
func (m *CalcAvgResponse) XXX_Size() int {
	return xxx_messageInfo_CalcAvgResponse.Size(m)
}
func (m *CalcAvgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalcAvgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalcAvgResponse proto.InternalMessageInfo

func (m *CalcAvgResponse) GetAveResult() float64 {
	if m != nil {
		return m.AveResult
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*CalcPrimeRequest)(nil), "calculator.CalcPrimeRequest")
	proto.RegisterType((*CalcPrimeResponse)(nil), "calculator.CalcPrimeResponse")
	proto.RegisterType((*CalcAvgRequest)(nil), "calculator.CalcAvgRequest")
	proto.RegisterType((*CalcAvgResponse)(nil), "calculator.CalcAvgResponse")
}

func init() {
	proto.RegisterFile("calculator/calculatorpb/calculator.proto", fileDescriptor_7f42938f8c8365cf)
}

var fileDescriptor_7f42938f8c8365cf = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x75, 0xfd, 0x08, 0x74, 0x52, 0xaa, 0xee, 0x21, 0x96, 0x68, 0x41, 0x17, 0x84, 0xe0, 0xa1,
	0xd6, 0x28, 0xbd, 0xab, 0xe0, 0x41, 0x3c, 0x48, 0x72, 0xf3, 0x52, 0x36, 0x61, 0x2c, 0x85, 0x7c,
	0xb9, 0xd9, 0xcd, 0x2f, 0xf6, 0x87, 0x48, 0x92, 0x4d, 0xb2, 0x54, 0xa5, 0xb7, 0x9d, 0xb7, 0xef,
	0xbd, 0x99, 0x79, 0x0c, 0x78, 0x31, 0x4f, 0x62, 0x95, 0x70, 0x99, 0x8b, 0xdb, 0xe1, 0x59, 0x44,
	0x46, 0x31, 0x2f, 0x44, 0x2e, 0x73, 0x0a, 0x03, 0xc2, 0x1e, 0x00, 0x42, 0x95, 0x06, 0xf8, 0xa5,
	0xb0, 0x94, 0x94, 0xc2, 0x61, 0xa6, 0xd2, 0xbb, 0x29, 0xb9, 0x24, 0xde, 0x51, 0xd0, 0xbc, 0x35,
	0xe6, 0x4f, 0xf7, 0x7b, 0xcc, 0x67, 0xd7, 0x60, 0x37, 0xaa, 0xb2, 0xc8, 0xb3, 0x12, 0xa9, 0x03,
	0x96, 0xc0, 0x52, 0x25, 0x52, 0x0b, 0x75, 0xc5, 0x6e, 0xe0, 0xe4, 0x99, 0x27, 0xf1, 0xbb, 0xd8,
	0xa4, 0xd8, 0xb5, 0x70, 0xc0, 0xca, 0x54, 0x1a, 0xa1, 0xe8, 0xb8, 0x6d, 0xc5, 0x96, 0x70, 0x6a,
	0x70, 0xb5, 0xf1, 0x15, 0x8c, 0x8b, 0x1a, 0x58, 0x7d, 0xf2, 0x58, 0xe6, 0x9d, 0xc4, 0x6e, 0xb0,
	0x97, 0x06, 0x62, 0x1e, 0x4c, 0x6a, 0xdd, 0x63, 0xb5, 0xde, 0xd5, 0x61, 0x01, 0xc7, 0x3d, 0x53,
	0xfb, 0xcf, 0x00, 0x78, 0x85, 0x2b, 0x63, 0x78, 0x12, 0x8c, 0x78, 0x55, 0x0f, 0xa0, 0x12, 0xe9,
	0x7f, 0x93, 0x76, 0x81, 0x3a, 0x2b, 0x0c, 0x51, 0x54, 0x9b, 0x18, 0xe9, 0x12, 0x0e, 0x42, 0x95,
	0x52, 0x67, 0x6e, 0xe4, 0x3a, 0x44, 0xe8, 0x9e, 0xfd, 0xc2, 0x75, 0xaf, 0x37, 0x18, 0xf5, 0x0b,
	0xd2, 0x0b, 0x93, 0xb5, 0x9d, 0x91, 0x3b, 0xfb, 0xe7, 0xb7, 0x75, 0x62, 0x7b, 0x0b, 0x42, 0x5f,
	0xc1, 0x6e, 0x97, 0x41, 0xc1, 0xd7, 0x48, 0xdd, 0x6d, 0xc5, 0x90, 0x87, 0x7b, 0xfe, 0xe7, 0x5f,
	0xe7, 0xe5, 0x91, 0xa7, 0xc9, 0xc7, 0xd8, 0x3c, 0x98, 0xc8, 0x6a, 0xce, 0xe4, 0xfe, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x82, 0xf6, 0xa4, 0xfa, 0x52, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculateServiceClient is the client API for CalculateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculateServiceClient interface {
	// Unary
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// Server Sreaming
	CalcPrime(ctx context.Context, in *CalcPrimeRequest, opts ...grpc.CallOption) (CalculateService_CalcPrimeClient, error)
	// Client Sreaming
	CalcAverage(ctx context.Context, opts ...grpc.CallOption) (CalculateService_CalcAverageClient, error)
}

type calculateServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculateServiceClient(cc *grpc.ClientConn) CalculateServiceClient {
	return &calculateServiceClient{cc}
}

func (c *calculateServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculateService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculateServiceClient) CalcPrime(ctx context.Context, in *CalcPrimeRequest, opts ...grpc.CallOption) (CalculateService_CalcPrimeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculateService_serviceDesc.Streams[0], "/calculator.CalculateService/CalcPrime", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculateServiceCalcPrimeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculateService_CalcPrimeClient interface {
	Recv() (*CalcPrimeResponse, error)
	grpc.ClientStream
}

type calculateServiceCalcPrimeClient struct {
	grpc.ClientStream
}

func (x *calculateServiceCalcPrimeClient) Recv() (*CalcPrimeResponse, error) {
	m := new(CalcPrimeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculateServiceClient) CalcAverage(ctx context.Context, opts ...grpc.CallOption) (CalculateService_CalcAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculateService_serviceDesc.Streams[1], "/calculator.CalculateService/CalcAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculateServiceCalcAverageClient{stream}
	return x, nil
}

type CalculateService_CalcAverageClient interface {
	Send(*CalcAvgRequest) error
	CloseAndRecv() (*CalcAvgResponse, error)
	grpc.ClientStream
}

type calculateServiceCalcAverageClient struct {
	grpc.ClientStream
}

func (x *calculateServiceCalcAverageClient) Send(m *CalcAvgRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculateServiceCalcAverageClient) CloseAndRecv() (*CalcAvgResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(CalcAvgResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculateServiceServer is the server API for CalculateService service.
type CalculateServiceServer interface {
	// Unary
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	// Server Sreaming
	CalcPrime(*CalcPrimeRequest, CalculateService_CalcPrimeServer) error
	// Client Sreaming
	CalcAverage(CalculateService_CalcAverageServer) error
}

// UnimplementedCalculateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculateServiceServer struct {
}

func (*UnimplementedCalculateServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculateServiceServer) CalcPrime(req *CalcPrimeRequest, srv CalculateService_CalcPrimeServer) error {
	return status.Errorf(codes.Unimplemented, "method CalcPrime not implemented")
}
func (*UnimplementedCalculateServiceServer) CalcAverage(srv CalculateService_CalcAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method CalcAverage not implemented")
}

func RegisterCalculateServiceServer(s *grpc.Server, srv CalculateServiceServer) {
	s.RegisterService(&_CalculateService_serviceDesc, srv)
}

func _CalculateService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculateServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculateService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculateServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculateService_CalcPrime_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CalcPrimeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculateServiceServer).CalcPrime(m, &calculateServiceCalcPrimeServer{stream})
}

type CalculateService_CalcPrimeServer interface {
	Send(*CalcPrimeResponse) error
	grpc.ServerStream
}

type calculateServiceCalcPrimeServer struct {
	grpc.ServerStream
}

func (x *calculateServiceCalcPrimeServer) Send(m *CalcPrimeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculateService_CalcAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculateServiceServer).CalcAverage(&calculateServiceCalcAverageServer{stream})
}

type CalculateService_CalcAverageServer interface {
	SendAndClose(*CalcAvgResponse) error
	Recv() (*CalcAvgRequest, error)
	grpc.ServerStream
}

type calculateServiceCalcAverageServer struct {
	grpc.ServerStream
}

func (x *calculateServiceCalcAverageServer) SendAndClose(m *CalcAvgResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculateServiceCalcAverageServer) Recv() (*CalcAvgRequest, error) {
	m := new(CalcAvgRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculateService",
	HandlerType: (*CalculateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculateService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CalcPrime",
			Handler:       _CalculateService_CalcPrime_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CalcAverage",
			Handler:       _CalculateService_CalcAverage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calculatorpb/calculator.proto",
}
